import React, {useState, useEffect } from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import axios from 'axios'
import { toast } from 'react-toastify'
import {HStack, VStack} from '@chakra-ui/react'
import { Button, Checkbox, Form, Input, Typography, Modal, Text, Select  } from 'antd';
import styles from './index.module.css'
import { ToastContainer } from 'react-toastify'
import ClientCaptcha from "react-client-captcha"
import "react-client-captcha/dist/index.css"
import 'react-toastify/dist/ReactToastify.css'

const { Paragraph , Title } = Typography;
const Login = () => {
  const [userName, setUserName] = useState()
  const [email, setEmail] = useState()
  const [password, setPassword] = useState()
  const [statusCode, setStatusCode] = useState()
  const [error,setError] = useState(false)
  const [remember,setRemember] = useState(false)
  const [errorText,setErrorText] = useState('')
  const [captcha, setCaptcha] =useState('')
  const [openModalContact, setOpenModalContact] = useState(false)
  const router = useRouter()

  function createCaptcha(captchaCode){
    setCaptcha(captchaCode)
  }
  function toogleModalFormContact(){
    setOpenModalContact(!openModalContact)
  }
  async function submitContact(data){
    return await axios
    .post('http://localhost:3001/contact', {manv: data.manv, tennv: data.tennv, donvi: data.donvi, email: data.email, phone: data.phone, decription: data.decription })
    .then((res) => {
      toast.success('Gửi yêu cầu thành công')
      setOpenModalContact(!openModalContact)
      const result = {
        status: res.data.status,
        data: res.data.message,
      }
    })
    .catch(function (error) {
      // handle error
      console.log(error.response)
    })
  }

  async function submitLogin(data){
    if(data.capchaText === captcha){
      return await axios
      .post('http://localhost:3001/user/login', {email: data.email, password: data.password})
      .then((res) => {
        setEmail(data.email)
        setPassword(data.password)
        setUserName(res.data.userName)
        setStatusCode(res.status)
        if(data.remember){
          window.localStorage.setItem('idTracuu', res.data.id)
          window.localStorage.setItem('fullNameTracuu', res.data.userName)
          window.localStorage.setItem('rTokenTracuu', res.data.accessToken)
          window.localStorage.setItem('emailTracuu', data.email)
          window.localStorage.setItem('passwordTracuu', data.password)
          window.localStorage.setItem('rememberTracuu', JSON.stringify(data.remember))
        }else{
          window.localStorage.setItem('fullNameTracuu', res.data.userName)
          window.localStorage.setItem('rTokenTracuu', res.data.accessToken)
        }
        router.push('/thunhapthang')
        return(result)
      })
      .catch(function (error) {
        // handle error
        toast.error(error?.response?.data?.message)
      })
    }else{
      toast.error('Vui lòng nhập lại mã Captcha.')
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Tra cứu thu nhập | Login </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon-16x16.png" />
      </Head>
      <main className={styles.main}>
        <section className={styles.loginSection}>
        {/* <Avatar size={{sx: 64, sm: 64, md: 64, lg: 80, xl:80, xxl: 80}} src ={'./logo.jpg'} />
        */}
        <div style={{background: '#163764', marginBottom: '1rem', borderRadius: '5px'}}>
        <a
            href="https://ufm.edu.vn/"
            target="_blank"
            rel="noopener noreferrer"
          >
          <img src='./logo4.png'/>
          </a>
        </div>
        <Title level={2}>ĐĂNG NHẬP</Title>
        <Paragraph><b>HỆ THỐNG TRA CỨU THÔNG TIN THU NHẬP</b></Paragraph >
        <VStack margin={"2em"} alignItems={"center"}>
          <Form
              name="basic"
              labelCol={{
                span: 8,
              }}
              wrapperCol={{
                span: 20,
              }}
              initialValues={{
                remember: true,
              }}
              autoComplete="off"
              onFinish={submitLogin}
            >
              <Form.Item
                label="Tài khoản: "
                placeholder="Mã nhân sự hoặc email"
                name="email"
                rules={[
                  {
                    required: true,
                    message: 'Vui lòng nhập tài khoản!',
                  },
                ]}
              >
                <Input />
              </Form.Item>

              <Form.Item
                label="Mật khẩu: "
                name="password"
                rules={[
                  {
                    required: true,
                    message: 'Vui lòng nhập mật khẩu!',
                  },
                ]}
              >
                <Input.Password />
              </Form.Item>
              <HStack alignItems={'start'}>
              <Form.Item
                name="capchaText"
                rules={[
                  {
                    required: true,
                    message: 'Vui lòng nhập mã Capcha!',
                  },
                ]}
              >
                <Input placeholder='Nhập mã Capcha' />
              </Form.Item>
              <ClientCaptcha captchaCode ={createCaptcha} />
              </HStack>
              <Form.Item
                name="remember"
                valuePropName="checked"
                wrapperCol={{
                  offset: 8,
                  span: 16,
                }}
              >
                <Checkbox>Nhớ mật khẩu</Checkbox>
              </Form.Item>

              <VStack>
                <Button type="primary" block htmlType="submit">
                  Đăng nhập
                </Button>
                <Button onClick={toogleModalFormContact} type="link">Liên hệ kỹ thuật</Button>
              </VStack>
            </Form>
          </VStack>
        </section>
      </main>
      <footer className={styles.footer}>
        <a
          href="https://phongcntt.ufm.edu.vn/"
          target="_blank"
          rel="noopener noreferrer"
        >
          Coppyright by:{' '} © 2022 Phòng Công nghệ thông tin
        </a>
      </footer>
      {/* Modal thông tin kỹ thuật */}
      <Modal
        visible={openModalContact}
        title="Gửi yêu cầu hỗ trợ kỹ thuật"
        // onOk={submitChangeEmail}
        onCancel={toogleModalFormContact}
        footer={null}
      >
      <Form
          name="basic"
          labelCol={{
            span: 8,
          }}
          wrapperCol={{
            span: 20,
          }}
          initialValues={{
            remember: true,
          }}
          autoComplete="off"
          onFinish={submitContact}
        >
          <Form.Item
            label="Mã nhân sự: "
            name="manv"
            rules={[
              {
                required: true,
                message: 'Vui lòng nhập mã nhân sự!'
              },
            ]}
          >
          <Input  />
          </Form.Item>
          <Form.Item
            label="Họ tên: "
            name="tennv"
            rules={[
              {
                required: true,
                message: 'Vui lòng nhập họ và tên!'
              },
            ]}
          >
          <Input  />
          </Form.Item>
            <Form.Item name="donvi" label="Đơn vị:">
              <Select>
                <Select.Option value="Ban Giám hiệu">Ban Giám hiệu</Select.Option>
                <Select.Option value="Khoa Quản trị Kinh doanh">Khoa Quản trị Kinh doanh</Select.Option>
                <Select.Option value="Khoa Marketing">Khoa Marketing</Select.Option>
                <Select.Option value="Khoa Công nghệ thông tin">Khoa Công nghệ thông tin</Select.Option>
                <Select.Option value="Khoa Thương mại">Khoa Thương mại</Select.Option>
                <Select.Option value="Khoa Du lịch">Khoa Du lịch</Select.Option>
                <Select.Option value="Khoa Kế toán - Kiểm toán">Khoa Kế toán - Kiểm toán</Select.Option>
                <Select.Option value="Khoa Tài chính - Ngân hàng">Khoa Tài chính - Ngân hàng</Select.Option>
                <Select.Option value="Khoa Thuế - Hải quan">Khoa Thuế - Hải quan</Select.Option>
                <Select.Option value="Khoa Ngoại ngữ">Khoa Ngoại ngữ</Select.Option>
                <Select.Option value="Khoa Kinh tế - Luật">Khoa Kinh tế - Luật</Select.Option>
                <Select.Option value="Khoa GDQPAN-GDTC">Khoa GDQPAN-GDTC</Select.Option>
                <Select.Option value="Viện Đào tạo Thường xuyên">Viện Đào tạo Thường xuyên</Select.Option>
                <Select.Option value="Viện Đào tạo sau Đại học">Viện Đào tạo sau Đại học</Select.Option>
                <Select.Option value="Phòng Tổ chức - Hành chính">Phòng Tổ chức - Hành chính</Select.Option>
                <Select.Option value="Phòng Quản lý đào tạo">Phòng Quản lý đào tạo</Select.Option>
                <Select.Option value="Phòng Quản trị thiết bị">Phòng Quản trị thiết bị</Select.Option>
                <Select.Option value="Phòng Công tác Sinh viên">Phòng Công tác Sinh viên</Select.Option>
                <Select.Option value="Phòng khảo thí - QLCL">Phòng khảo thí - QLCL</Select.Option>
                <Select.Option value="Phòng Quản lý khoa học">Phòng Quản lý khoa học</Select.Option>
                <Select.Option value="Phòng Thanh tra Đào tạo">Phòng Thanh tra Đào tạo</Select.Option>
                <Select.Option value="Thư viện">Thư viện</Select.Option>
                <Select.Option value="Trạm Y tế">Trạm Y tế</Select.Option>
                <Select.Option value="Phòng Công nghệ thông tin">Phòng Công nghệ thông tin</Select.Option>
                <Select.Option value="Trung tâm tuyển sinh & quan hệ DN">Trung tâm tuyển sinh & quan hệ DN</Select.Option>
                <Select.Option value="Viện Đào tạo Quốc tế">Viện Đào tạo Quốc tế</Select.Option>
                <Select.Option value="Trung tâm Ngoại ngữ - Tin học">Trung tâm Ngoại ngữ - Tin học</Select.Option>
                <Select.Option value="Viện Nghiên cứu Kinh tế Ứng dụng">Viện Nghiên cứu Kinh tế Ứng dụng</Select.Option>
                <Select.Option value="Khoa Thẩm định giá - KDBĐS">Khoa Thẩm định giá - KDBĐS</Select.Option>
                <Select.Option value="Trung tâm Bồi dưỡng và tư vấn TCHQ">Trung tâm Bồi dưỡng và tư vấn TCHQ</Select.Option>
                <Select.Option value="Trung tâm dịch vụ KTX">Trung tâm dịch vụ KTX</Select.Option>
                <Select.Option value="Khoa Lý luận Chính trị">Khoa Lý luận Chính trị</Select.Option>
              </Select>
          </Form.Item>
          <Form.Item
            label="Email liên hệ: "
            name="email"
            rules={[
              {
                required: true,
                message: 'Vui lòng nhập Email!'
              },
            ]}
          >
            <Input />
          </Form.Item>
          <Form.Item
            label="Điện thoại liên hệ: "
            name="phone"
            rules={[
              {
                required: true,
                message: 'Vui lòng nhập số điện thoại!'
              },
            ]}
          >
            <Input />
          </Form.Item>
          <Form.Item
            label="Lý do: "
            name="decription"
            rules={[
              {
                required: true,
                message: 'Vui lòng nhập lý do'
              },
            ]}
          >
            <Input />
          </Form.Item>
          <HStack justifyContent="end">
            <Button key="back" onClick={toogleModalFormContact}>Thoát</Button>
            <Button type="primary"  htmlType="submit">Gửi yêu cầu</Button>
          </HStack>
        </Form>
      </Modal>
      <ToastContainer />
    </div>
   );
}

export default Login;
Login.getLayout = function PageLayout(page) {
  return <>{page}</>
}